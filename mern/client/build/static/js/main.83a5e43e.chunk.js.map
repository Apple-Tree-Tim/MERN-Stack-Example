{"version":3,"sources":["components/navbar.js","components/recordList.js","components/edit.js","components/create.js","App.js","index.js"],"names":["Navbar","_jsx","children","_jsxs","className","NavLink","to","style","src","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Record","props","record","name","position","level","Link","concat","_id","onClick","deleteRecord","RecordList","_useState","useState","_useState2","_slicedToArray","records","setRecords","getRecords","_getRecords","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","message","wrap","_context","prev","next","fetch","sent","ok","statusText","window","alert","abrupt","json","stop","_deleteRecord","_callee2","_context2","method","t0","useEffect","length","marginTop","map","_x","Edit","form","setForm","params","useParams","navigate","useNavigate","updateForm","value","_objectSpread","_onSubmit","e","editedPerson","preventDefault","body","JSON","stringify","headers","_fetchData","toString","fetchData","onSubmit","htmlFor","onChange","target","checked","Create","newPerson","App","margin","Routes","Route","exact","path","element","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.83a5e43e.chunk.js","sourcesContent":["import React from \"react\";\n\n// We import bootstrap to make our application look better.\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// We import NavLink to utilize the react router.\nimport { NavLink } from \"react-router-dom\";\n\n// Here, we display our Navbar\nexport default function Navbar() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n        <img style={{\"width\" : 25 + '%'}} src=\"https://d3cy9zhslanhfa.cloudfront.net/media/3800C044-6298-4575-A05D5C6B7623EE37/4B45D0EC-3482-4759-82DA37D8EA07D229/webimage-8A27671A-8A53-45DC-89D7BF8537F15A0D.png\"></img>\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/create\">\n                Create Record\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? ''\n    : 'http://localhost:5000'\n\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.name}</td>\n    <td>{props.record.position}</td>\n    <td>{props.record.level}</td>\n    <td>\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n      <button className=\"btn btn-link\"\n        onClick={() => {\n          props.deleteRecord(props.record._id);\n        }}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n);\n\nexport default function RecordList() {\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    \n\n    getRecords();\n\n    return; \n  }, [records.length]);\n  async function getRecords() {\n    const response = await fetch(`${BASE_URL}/record/`);\n\n    if (!response.ok) {\n      const message = `An error occured: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n\n    const records = await response.json();\n    setRecords(records);\n  }\n  // This method will delete a record\n  async function deleteRecord(id) {\n    try {\n\n      /*\n        Please remove once implement mern/server/routes/record.js lines 74\n      */\n      alert('Please implement the \"DELETE\" route on mern/server/routes/record.js lines 74, press \"OK\" when you done')\n      await fetch(`${BASE_URL}/${id}`, {\n        method: \"DELETE\"\n      });\n\n       await  getRecords();\n    }\n    catch(e)\n    {\n      alert(\"Error : \" + e)\n    }\n  }\n\n  // This method will map out the records on the table\n  function recordList() {\n    return records.map((record) => {\n      return (\n        <Record\n          record={record}\n          deleteRecord={() => deleteRecord(record._id)}\n          key={record._id}\n        />\n      );\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  return (\n    <div>\n      <h3>Record List</h3>\n      <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Position</th>\n            <th>Level</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>{recordList()}</tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? ''\n    : 'http://localhost:5000'\n\nexport default function Edit() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`${BASE_URL}/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      level: form.level,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`${BASE_URL}/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    });\n\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return (\n    <div>\n      <h3>Update Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n        </div>\n        </div>\n        <br />\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Record\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? ''\n    : 'http://localhost:5000'\n\nexport default function Create() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n    try {\n      await fetch(`${BASE_URL}/record/add`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    })\n    }\n    catch(e){\n      window.alert(\"Error : \" + e);\n      return;\n    }\n\n    setForm({ name: \"\", position: \"\", level: \"\" });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div>\n      <h3>Create New Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Create person\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\n// We use Route in order to define the different routes of our application\nimport { Route, Routes } from \"react-router-dom\";\n\n// We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport RecordList from \"./components/recordList\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <div style={{ margin: 20 }}>\n      <Routes>\n        <Route exact path=\"/\" element={<RecordList />} />\n        <Route path=\"/edit/:id\" element={<Edit />} />\n        <Route path=\"/create\" element={<Create />} />\n      </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}
{"version":3,"sources":["components/navbar.js","components/recordList.js","components/edit.js","components/create.js","App.js","index.js"],"names":["Navbar","_jsx","children","_jsxs","className","NavLink","to","style","src","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Record","props","record","name","position","level","Link","concat","_id","onClick","deleteRecord","RecordList","_useState","useState","_useState2","_slicedToArray","records","setRecords","_deleteRecord","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","newRecords","wrap","_context2","prev","next","alert","abrupt","filter","el","t0","stop","apply","arguments","useEffect","_getRecords","_callee","response","message","_context","fetch","sent","ok","statusText","window","json","getRecords","length","marginTop","map","_x","Edit","form","setForm","params","useParams","navigate","useNavigate","updateForm","value","_objectSpread","_onSubmit","e","editedPerson","preventDefault","method","body","JSON","stringify","headers","_fetchData","toString","fetchData","onSubmit","htmlFor","onChange","target","checked","Create","newPerson","App","margin","Routes","Route","exact","path","element","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.aca97640.chunk.js","sourcesContent":["import React from \"react\";\n\n// We import bootstrap to make our application look better.\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// We import NavLink to utilize the react router.\nimport { NavLink } from \"react-router-dom\";\n\n// Here, we display our Navbar\nexport default function Navbar() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n        <img style={{\"width\" : 25 + '%'}} src=\"https://d3cy9zhslanhfa.cloudfront.net/media/3800C044-6298-4575-A05D5C6B7623EE37/4B45D0EC-3482-4759-82DA37D8EA07D229/webimage-8A27671A-8A53-45DC-89D7BF8537F15A0D.png\"></img>\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/create\">\n                Create Record\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? ''\n    : 'http://localhost:5000'\n\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.name}</td>\n    <td>{props.record.position}</td>\n    <td>{props.record.level}</td>\n    <td>\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n      <button className=\"btn btn-link\"\n        onClick={() => {\n          props.deleteRecord(props.record._id);\n        }}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n);\n\nexport default function RecordList() {\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`${BASE_URL}/record/`);\n\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      setRecords(records);\n    }\n\n    getRecords();\n\n    return; \n  }, [records.length]);\n\n  // This method will delete a record\n  async function deleteRecord(id) {\n    try {\n\n      /*\n        Please remove once implement mern/server/routes/record.js lines 74\n      */\n     alert('Please implement the \"DELETE\" route on mern/server/routes/record.js lines 74')\n     return;\n      await fetch(`${BASE_URL}/${id}`, {\n        method: \"DELETE\"\n      });\n\n      const newRecords = records.filter((el) => el._id !== id);\n      setRecords(newRecords);\n    }\n    catch(e)\n    {\n      alert(\"Error : \" + e)\n    }\n  }\n\n  // This method will map out the records on the table\n  function recordList() {\n    return records.map((record) => {\n      return (\n        <Record\n          record={record}\n          deleteRecord={() => deleteRecord(record._id)}\n          key={record._id}\n        />\n      );\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  return (\n    <div>\n      <h3>Record List</h3>\n      <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Position</th>\n            <th>Level</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>{recordList()}</tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? ''\n    : 'http://localhost:5000'\n\nexport default function Edit() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`${BASE_URL}/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      level: form.level,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`${BASE_URL}/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    });\n\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return (\n    <div>\n      <h3>Update Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n        </div>\n        </div>\n        <br />\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Record\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? ''\n    : 'http://localhost:5000'\n\nexport default function Create() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n    try {\n      await fetch(`${BASE_URL}/record/add`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    })\n    }\n    catch(e){\n      window.alert(\"Error : \" + e);\n      return;\n    }\n\n    setForm({ name: \"\", position: \"\", level: \"\" });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div>\n      <h3>Create New Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Create person\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\n// We use Route in order to define the different routes of our application\nimport { Route, Routes } from \"react-router-dom\";\n\n// We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport RecordList from \"./components/recordList\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <div style={{ margin: 20 }}>\n      <Routes>\n        <Route exact path=\"/\" element={<RecordList />} />\n        <Route path=\"/edit/:id\" element={<Edit />} />\n        <Route path=\"/create\" element={<Create />} />\n      </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}
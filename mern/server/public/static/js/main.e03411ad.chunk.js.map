{"version":3,"sources":["components/navbar.js","components/searchBar.js","components/recordList.js","components/edit.js","components/create.js","App.js","index.js"],"names":["Navbar","_jsx","children","_jsxs","className","NavLink","to","style","src","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","SearchBar","_ref","setRecords","_useState","useState","searchTerm","_useState2","_slicedToArray","form","setForm","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","newSearch","response","records","wrap","_context","prev","next","preventDefault","_objectSpread","fetch","concat","method","headers","body","JSON","stringify","sent","json","t0","window","alert","abrupt","stop","apply","arguments","onSubmit","_x","value","onChange","target","Record","props","record","name","position","level","Link","_id","onClick","deleteRecord","RecordList","getRecords","_getRecords","message","ok","statusText","_deleteRecord","_callee2","_context2","status","useEffect","marginTop","length","map","Edit","params","useParams","navigate","useNavigate","updateForm","editedPerson","_fetchData","toString","fetchData","htmlFor","checked","Create","newPerson","App","margin","Routes","Route","exact","path","element","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.e03411ad.chunk.js","sourcesContent":["import React from \"react\";\n\n// We import bootstrap to make our application look better.\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// We import NavLink to utilize the react router.\nimport { NavLink } from \"react-router-dom\";\n\n// Here, we display our Navbar\nexport default function Navbar() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n        <img style={{\"width\" : 25 + '%'}} src=\"https://d3cy9zhslanhfa.cloudfront.net/media/3800C044-6298-4575-A05D5C6B7623EE37/4B45D0EC-3482-4759-82DA37D8EA07D229/webimage-8A27671A-8A53-45DC-89D7BF8537F15A0D.png\"></img>\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/create\">\n                Create Record\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? ''\n    : 'http://localhost:5000'\n\nexport default function SearchBar({setRecords}) {\n  const [form, setForm] = useState({\n   searchTerm : null\n  });\n\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newSearch = { ...form };\n    try {\n      const response = await fetch(`${BASE_URL}/search`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newSearch),\n    })\n    const records = await response.json();\n    // setForm({ name: \"\", position: \"\", level: \"\" });\n    setRecords(records);\n    }\n    catch(e){\n      window.alert(\"Error : \" + e);\n      return;\n    }\n   \n    //navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"searchTerm\"\n            value={form.searchTerm}\n            onChange={(e) => updateForm({ searchTerm: e.target.value })}\n          />\n          <input\n            type=\"submit\"\n            value=\"Search\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from './searchBar.js'\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? ''\n    : 'http://localhost:5000'\n\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.name}</td>\n    <td>{props.record.position}</td>\n    <td>{props.record.level}</td>\n    <td>\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n      <button className=\"btn btn-link\"\n        onClick={() => {\n          props.deleteRecord(props.record._id);\n        }}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n);\n\nexport default function RecordList() {\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    \n\n    getRecords();\n\n    return; \n  }, []);\n  async function getRecords() {\n    const response = await fetch(`${BASE_URL}/record/`);\n\n    if (!response.ok) {\n      const message = `An error occured: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n\n    const records = await response.json();\n    setRecords(records);\n  }\n  // This method will delete a record\n  async function deleteRecord(id) {\n    try {\n      /*\n        Please remove once implement mern/server/routes/record.js lines 74\n      */\n      const response = await fetch(`${BASE_URL}/${id}`, {\n        method: \"DELETE\"\n      });\n    \n      if (response.status === 404) {\n        alert('Please implement the mongodb delete method. Please visit \"mern/server/routes/record.js\" on line 74. This is where the delete endpoint should reside');\n      } else {\n        await getRecords();\n      }\n    }\n    catch(e) {\n      alert(\"Error : \" + e)\n    }\n  }\n\n  // This method will map out the records on the table\n  function recordList() {\n    if (records.length === 0) return <div>No Records Yet</div>\n    return records.map((record) => {\n      return (\n        <Record\n          record={record}\n          deleteRecord={() => deleteRecord(record._id)}\n          key={record._id}\n        />\n      );\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  return (\n    <div>\n      <h3>Record List</h3>\n      <SearchBar setRecords={setRecords} />\n      <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Position</th>\n            <th>Level</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>{recordList()}</tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? ''\n    : 'http://localhost:5000'\n\nexport default function Edit() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`${BASE_URL}/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      level: form.level,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`${BASE_URL}/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    });\n\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return (\n    <div>\n      <h3>Update Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n        </div>\n        </div>\n        <br />\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Record\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? ''\n    : 'http://localhost:5000'\n\nexport default function Create() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n    try {\n      await fetch(`${BASE_URL}/record/add`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    })\n    }\n    catch(e){\n      window.alert(\"Error : \" + e);\n      return;\n    }\n\n    setForm({ name: \"\", position: \"\", level: \"\" });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div>\n      <h3>Create New Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Create person\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\n// We use Route in order to define the different routes of our application\nimport { Route, Routes } from \"react-router-dom\";\n\n// We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport RecordList from \"./components/recordList\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <div style={{ margin: 20 }}>\n      <Routes>\n        <Route exact path=\"/\" element={<RecordList />} />\n        <Route path=\"/edit/:id\" element={<Edit />} />\n        <Route path=\"/create\" element={<Create />} />\n      </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}